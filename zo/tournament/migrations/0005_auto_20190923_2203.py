# Generated by Django 2.2.4 on 2019-09-23 10:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('tournament', '0004_auto_20190921_2229'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContestInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=30)),
                ('content_type', models.ForeignKey(limit_choices_to={'pk__in': ()}, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='ContestInstanceTypeMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestInstanceTypeMeasurementAttempts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestMeasurementAttempt',
            fields=[
                ('measurement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournament.Measurement')),
                ('order', models.PositiveIntegerField()),
                ('contest_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='tournament.ContestInstanceTypeMeasurementAttempts')),
            ],
            bases=('tournament.measurement',),
        ),
        migrations.CreateModel(
            name='RoundSystemTypeSemiLinear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_attempts', to='tournament.ContestMeasurementAttempt')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreTypeAttempts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreTypeMeasurementDistance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreTypeMeasurementRace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lane', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.AlterField(
            model_name='contest',
            name='content_type',
            field=models.ForeignKey(limit_choices_to={'pk__in': ()}, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.CreateModel(
            name='ScoreMeasurementRace',
            fields=[
                ('measurement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournament.Measurement')),
                ('score_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='measurement', to='tournament.ScoreTypeMeasurementRace')),
            ],
            bases=('tournament.measurement',),
        ),
        migrations.CreateModel(
            name='ScoreMeasurementDistance',
            fields=[
                ('measurement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournament.Measurement')),
                ('no_value', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField()),
                ('score_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='tournament.ScoreTypeMeasurementDistance')),
            ],
            bases=('tournament.measurement',),
        ),
        migrations.CreateModel(
            name='ScoreAttemptResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('result', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Pass', 'Pass'), ('N/A', 'N/A'), ('', '')], max_length=10)),
                ('score_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='tournament.ScoreAttempt')),
            ],
        ),
        migrations.AddField(
            model_name='scoreattempt',
            name='score_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='tournament.ScoreTypeAttempts'),
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('participation', models.BooleanField(default=False)),
                ('placing', models.PositiveIntegerField(blank=True)),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='tournament.Competitor')),
                ('content_type', models.ForeignKey(limit_choices_to={'pk__in': ()}, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('contest_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='tournament.ContestInstance')),
            ],
        ),
        migrations.CreateModel(
            name='RoundSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(limit_choices_to={'pk__in': ()}, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='RoundController',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='round_controller', to='tournament.TournamentEvent')),
                ('round_system', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='round_controllers', to='tournament.RoundSystem')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('container_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_rounds', to='tournament.Round')),
                ('previous_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='next_rounds', to='tournament.Round')),
                ('round_controller', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_round', to='tournament.RoundController')),
            ],
        ),
        migrations.AddField(
            model_name='contestinstance',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contest_instances', to='tournament.Round'),
        ),
    ]
