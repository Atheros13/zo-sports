# Generated by Django 2.2.4 on 2019-09-19 09:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApparatusThrow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(limit_choices_to={'pk__in': ()}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('contests', models.ManyToManyField(related_name='_contest_contests_+', to='tournament.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='ContestTypeJumpHorizontal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules', models.FileField(upload_to='tournament/contest/rules/')),
                ('style', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestTypeJumpVertical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules', models.FileField(upload_to='tournament/contest/rules/')),
                ('style', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementUnitGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TournamentMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament', to='tournament.TournamentMaster')),
            ],
        ),
        migrations.CreateModel(
            name='ObstacleRace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('measurement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.Measurement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=10)),
                ('rank_value', models.PositiveIntegerField()),
                ('measurement_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='tournament.MeasurementUnitGroup')),
            ],
        ),
        migrations.AddField(
            model_name='measurement',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='tournament.MeasurementUnit'),
        ),
        migrations.CreateModel(
            name='ContestTypeThrow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules', models.FileField(upload_to='tournament/contest/rules/')),
                ('style', models.CharField(blank=True, max_length=30)),
                ('apparatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.ApparatusThrow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestTypeRaceSwimming',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules', models.FileField(upload_to='tournament/contest/rules/')),
                ('style', models.CharField(blank=True, max_length=30)),
                ('water', models.CharField(blank=True, max_length=30)),
                ('distance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.Measurement')),
                ('pool_length', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='swimming_pool_length', to='tournament.Measurement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestTypeRaceRunning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules', models.FileField(upload_to='tournament/contest/rules/')),
                ('style', models.CharField(blank=True, max_length=30)),
                ('surface', models.CharField(blank=True, max_length=30)),
                ('distance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.Measurement')),
                ('obstacle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.ObstacleRace')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name', to='tournament.Contest')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contest_name', to='tournament.Tournament')),
            ],
        ),
    ]
